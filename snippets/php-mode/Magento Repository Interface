# -*- mode: snippet -*-
# name: Magento Repository Interface
# key: mage-irepository
# --
namespace ${1:`(yas-mage/namespace)`};

use Magento\Framework\Api\SearchCriteriaInterface;

/**
 * Interface $2RepositoryInterface
 * @package $1
 */
interface ${2:Model}RepositoryInterface
{
    /**
     * Save
     *
     * @param Data\\$2Interface \$${2:$(string-inflection-lower-camelcase-function yas-text)} $2
     *
     * @return \\$1\Data\\$2Interface
     */
    public function save(\\$1\Data\\$1Interface \$${2:$(string-inflection-lower-camelcase-function yas-text)});

    /**
     * Get by id
     *
     * @param int \$$2Id $2 id
     *
     * @return \\$1\Data\\$1Interface
     */
    public function getById(\$${2:$(string-inflection-lower-camelcase-function yas-text)}Id);

    /**
     * Get List
     *
     * @param SearchCriteriaInterface $searchCriteria search criteria
     *
     * @return \Magento\Framework\Api\SearchResultsInterface
     */
    public function getList(\Magento\Framework\Api\SearchCriteriaInterface $searchCriteria);

    /**
     * Delete
     *
     * @param Data\\$2Interface \$${2:$(string-inflection-lower-camelcase-function yas-text)} $2
     *
     * @return bool
     */
    public function delete(\\$1\Data\\$2Interface \$${2:$(string-inflection-lower-camelcase-function yas-text)});

    /**
     * Delete by id
     *
     * @param int \$${2:$(string-inflection-lower-camelcase-function yas-text)}Id $2 id
     *
     * @return mixed|bool
     */
    public function deleteById(\$${2:$(string-inflection-lower-camelcase-function yas-text)}Id);
}